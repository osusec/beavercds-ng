---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "rcds-{{ slug }}-{{ pod.name }}"
  namespace: "rcds-{{ slug }}"
  annotations:
    app.kubernetes.io/managed-by: rcds
    rctf/challenge: "{{ chal.name }}"
    rctf/category: "{{ chal.category }}"
    rctf/challenge-pod: "{{ pod.name }}"
spec:
  selector:
    matchLabels:
      rctf/part-of: "{{ slug }}-{{ pod.name }}"
  replicas: {{ pod.replicas }}
  template:
    metadata:
      labels:
        rctf/part-of: "{{ slug }}-{{ pod.name }}"
    spec:
      imagePullSecrets:
        - name: "rcds-{{ slug }}-pull"
      nodeSelector:
        kubernetes.io/arch: {{ pod.architecture }}
      containers:
        - name: "{{ pod.name }}"
          image: "{{ pod_image }}"
          imagePullPolicy: Always
          ports:
            {% for p in pod.ports -%}
            - containerPort: {{ p.internal }}
            {%- else %}
            []
            {%- endfor %}

          {% if pod.env -%}
          env:
            {% for k, v in pod.env -%}
            - { name: "{{ k }}", value: "{{ v }}" }
            {%- else %}
            []
            {%- endfor %}
          {%- endif %}

          {% if pod.resources -%}
          resources:
            {# TODO: use defaults from rcds config -#}
            requests: {{ pod.resources | tojson }}
            limits: {{ pod.resources | tojson }}
          {%- endif %}

      # don't give chal pods k8s api tokens
      automountServiceAccountToken: false
